{"ast":null,"code":"import Link from'next/link';import React from'react';import{cn}from'utils';import{jsx as _jsx}from\"react/jsx-runtime\";var variants={heading:'text-3xl font-medium','sub-heading':'text-2xl font-medium','nav-heading':'text-lg font-medium sm:text-xl',nav:'font-medium',paragraph:'text-lg','sub-paragraph':'text-base font-medium text-inherit',input:'text-sm uppercase tracking-wide',label:'text-xs uppercase tracking-wide'};var Text=function Text(_ref){var variant=_ref.variant,className=_ref.className,href=_ref.href,children=_ref.children;return _jsx(\"p\",{className:cn(className,variants[variant]),children:href?_jsx(Link,{href:href,className:\"min-w-0 overflow-hidden text-ellipsis whitespace-nowrap\",children:children}):children});};export default Text;","map":{"version":3,"names":["Link","React","cn","variants","heading","nav","paragraph","input","label","Text","variant","className","href","children"],"sources":["/home/stacc/dapp-scaffold/src/components/Text/index.tsx"],"sourcesContent":["import Link from 'next/link';\nimport React from 'react';\nimport { cn } from 'utils';\n\n/**\n * Properties for a card component.\n */\ntype TextProps = {\n    variant:\n        | 'big-heading'\n        | 'heading'\n        | 'sub-heading'\n        | 'nav-heading'\n        | 'nav'\n        | 'input'\n        | 'label';\n    className?: string;\n    href?: string;\n    children?: React.ReactNode;\n    id?: string;\n};\n\n/**\n * Pre-defined styling, according to agreed-upon design-system.\n */\nconst variants = {\n    heading: 'text-3xl font-medium',\n    'sub-heading': 'text-2xl font-medium',\n    'nav-heading': 'text-lg font-medium sm:text-xl',\n    nav: 'font-medium',\n    paragraph: 'text-lg',\n    'sub-paragraph': 'text-base font-medium text-inherit',\n    input: 'text-sm uppercase tracking-wide',\n    label: 'text-xs uppercase tracking-wide',\n};\n\n/**\n * Definition of a card component,the main purpose of\n * which is to neatly display information. Can be both\n * interactive and static.\n *\n * @param variant Variations relating to pre-defined styling of the element.\n * @param className Custom classes to be applied to the element.\n * @param children Child elements to be rendered within the component.\n */\nconst Text = ({ variant, className, href, children }: TextProps) => (\n    <p className={cn(className, variants[variant])}>\n        {href ? (\n            <Link href={href} className=\"min-w-0 overflow-hidden text-ellipsis whitespace-nowrap\">\n                {children}\n            </Link>\n        ) : (\n            children\n        )}\n    </p>\n);\n\nexport default Text;"],"mappings":"AAAA,MAAOA,KAAI,KAAM,WAAW,CAC5B,MAAOC,MAAK,KAAM,OAAO,CACzB,OAASC,EAAE,KAAQ,OAAO,CAAC,2CAuB3B,GAAMC,SAAQ,CAAG,CACbC,OAAO,CAAE,sBAAsB,CAC/B,aAAa,CAAE,sBAAsB,CACrC,aAAa,CAAE,gCAAgC,CAC/CC,GAAG,CAAE,aAAa,CAClBC,SAAS,CAAE,SAAS,CACpB,eAAe,CAAE,oCAAoC,CACrDC,KAAK,CAAE,iCAAiC,CACxCC,KAAK,CAAE,iCACX,CAAC,CAWD,GAAMC,KAAI,CAAG,QAAPA,KAAI,UAAMC,QAAO,MAAPA,OAAO,CAAEC,SAAS,MAATA,SAAS,CAAEC,IAAI,MAAJA,IAAI,CAAEC,QAAQ,MAARA,QAAQ,OAC9C,WAAG,SAAS,CAAEX,EAAE,CAACS,SAAS,CAAER,QAAQ,CAACO,OAAO,CAAC,CAAE,UAC1CE,IAAI,CACD,KAAC,IAAI,EAAC,IAAI,CAAEA,IAAK,CAAC,SAAS,CAAC,yDAAyD,UAChFC,QAAQ,EACN,CAEPA,QACH,EACD,EACP,CAED,cAAeJ,KAAI"},"metadata":{},"sourceType":"module"}