/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Serializer, scalarEnum } from '@metaplex-foundation/umi/serializers';

export enum CompressionAccountType {
  Uninitialized,
  ConcurrentMerkleTree,
}

export type CompressionAccountTypeArgs = CompressionAccountType;

/** @deprecated Use `getCompressionAccountTypeSerializer()` without any argument instead. */
export function getCompressionAccountTypeSerializer(
  _context: object
): Serializer<CompressionAccountTypeArgs, CompressionAccountType>;
export function getCompressionAccountTypeSerializer(): Serializer<
  CompressionAccountTypeArgs,
  CompressionAccountType
>;
export function getCompressionAccountTypeSerializer(
  _context: object = {}
): Serializer<CompressionAccountTypeArgs, CompressionAccountType> {
  return scalarEnum<CompressionAccountType>(CompressionAccountType, {
    description: 'CompressionAccountType',
  }) as Serializer<CompressionAccountTypeArgs, CompressionAccountType>;
}
